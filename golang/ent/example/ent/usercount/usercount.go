// Code generated by entc, DO NOT EDIT.

package usercount

const (
	// Label holds the string label denoting the usercount type in the database.
	Label = "user_count"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldSelfBuy holds the string denoting the self_buy field in the database.
	FieldSelfBuy = "self_buy"
	// FieldInviteBuy holds the string denoting the invite_buy field in the database.
	FieldInviteBuy = "invite_buy"
	// FieldLevel holds the string denoting the level field in the database.
	FieldLevel = "level"
	// FieldCreated holds the string denoting the created field in the database.
	FieldCreated = "created"
	// FieldUpdated holds the string denoting the updated field in the database.
	FieldUpdated = "updated"
	// FieldDeleted holds the string denoting the deleted field in the database.
	FieldDeleted = "deleted"
	// EdgeOwner holds the string denoting the owner edge name in mutations.
	EdgeOwner = "owner"
	// Table holds the table name of the usercount in the database.
	Table = "user_counts"
	// OwnerTable is the table the holds the owner relation/edge.
	OwnerTable = "user_counts"
	// OwnerInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	OwnerInverseTable = "users"
	// OwnerColumn is the table column denoting the owner relation/edge.
	OwnerColumn = "user_id"
)

// Columns holds all SQL columns for usercount fields.
var Columns = []string{
	FieldID,
	FieldSelfBuy,
	FieldInviteBuy,
	FieldLevel,
	FieldCreated,
	FieldUpdated,
	FieldDeleted,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "user_counts"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"user_id",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultSelfBuy holds the default value on creation for the "self_buy" field.
	DefaultSelfBuy float64
	// DefaultInviteBuy holds the default value on creation for the "invite_buy" field.
	DefaultInviteBuy float64
	// DefaultLevel holds the default value on creation for the "level" field.
	DefaultLevel int
	// DefaultCreated holds the default value on creation for the "created" field.
	DefaultCreated int64
	// DefaultUpdated holds the default value on creation for the "updated" field.
	DefaultUpdated int64
	// DefaultDeleted holds the default value on creation for the "deleted" field.
	DefaultDeleted int64
)
