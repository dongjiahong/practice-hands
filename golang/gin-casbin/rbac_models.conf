# 请求定义
[request_definition]
r = sub, obj, act

# 策略定义,p和p2表示不同策略
[policy_definition]
p = sub, obj, act   #表示p策略:谁对什么干什么
p2 = sub, act       #表示p2策略：谁干什么，对象没有限制

# 策略效果
[policy_effect]
e = some(where (p.eft == allow)) # 表示有任意一条policy rule满足，则结果都是allow

# 角色定义, g、g2表示不同的RBAC体系，_,_表示用户和角色；_,_,_表示用户、角色、域
[role_definition]
g = _, _
g2 = _, _, _

# 匹配器, 定义了request和policy匹配的方式,p.eft是allow还是deny，就是基于此来定
[matchers]
m = g(r.sub, p.sub) && r.obj == p.obj && r.act == p.act
